# Claude Prompt ‚Äî Smart Expense Tracker Design System & Figma Mockup Concept

You are Claude Design, a **world-class product designer** tasked with creating a **complete Figma-style design system and prototype concept** for the Smart Expense Tracker project.

Your goal: deliver a **visually cohesive, premium-level design system** that the dev team can easily implement in React + Tailwind.

---

## üé® Vision
Create a cross between **Apple‚Äôs clarity**, **Revolut‚Äôs motion**, and **Notion‚Äôs calm minimalism**.  
It should feel *intelligent, effortless, and emotionally polished* ‚Äî the kind of interface that makes people trust their data.

---

## üß© Core Deliverables
Claude should output a **structured Figma mockup plan** and **component-level design documentation** including:

1. **Design System Foundations**
   - Typography scale (for headings, body, captions)
   - Color palette (light/dark variants)
   - Shadows, spacing scale, corner radius tokens
   - Iconography set (Lucide)
   - Animation rules (durations, easings, motion language)
   - UI tone (microcopy examples, interaction feedback language)

2. **Core Components**
   - Buttons (solid, outline, ghost)
   - Inputs (standard, floating label, date picker)
   - File Upload (drag & drop zone)
   - Cards (transaction, budget, receipt)
   - Modals, toasts, and steppers
   - Dashboard widgets (budget tracker, insights, charts)
   - Tables and list views with filter/search chips
   - Receipt verification editor (editable field rows with confidence indicators)
   - Manual entry line-item editor

3. **Layout & Navigation**
   - Dashboard layout grid (desktop and mobile)
   - Sidebar navigation with animated active state
   - Top navigation bar with search, user menu, and theme toggle
   - Page transitions and micro-interactions
   - Floating action button (FAB) on mobile for quick actions

4. **Page Mockups**
   - Login/Register
   - Dashboard (monthly summary + insights)
   - Transactions
   - Upload CSV (stepper flow)
   - Upload Receipt (OCR ‚Üí verification ‚Üí import)
   - Manual Receipt Entry
   - Budgets
   - Settings (themes, categories, privacy)

Each page must include clear layout annotations and suggested component reuse.

---

## üß† Design Language Guidelines
- **Typography:** `Inter` or `DM Sans`; consistent line height ratios (1.25‚Äì1.5)
- **Color Tokens:**
  - Primary: `#2563EB` (blue-500)
  - Accent gradient: `#3B82F6 ‚Üí #9333EA`
  - Success: `#16A34A`, Warning: `#F59E0B`, Error: `#EF4444`
  - Background: `#F9FAFB` (light), `#0F172A` (dark)
- **Radius:** 16px (cards/buttons), 24px (modals)
- **Shadows:** layered depth (`shadow-sm`, `shadow-md`, `shadow-xl`)
- **Animations:** 150‚Äì250ms `ease-in-out`, use scale + opacity transitions for feedback
- **Micro-interactions:** subtle hover scaling, shadow elevation, color glow

---

## üß† Accessibility & Responsiveness
- WCAG AA color contrast
- Minimum tap targets (48px)
- Support large text and reduced motion preferences
- Mobile-first layouts, adaptive grids for screens 360px‚Äì1440px+

---

## üß™ Deliverable Format
Claude should produce:
1. **Component reference list** with visual layout descriptions and hierarchy (like a virtual Figma file outline)
2. **Style token tables** (color, typography, spacing, radius, animation)
3. **Annotated page wireframes** (described using structure: ‚ÄúFrame ‚Üí Section ‚Üí Component ‚Üí Variant‚Äù)
4. **Design philosophy summary** (tone, brand emotion, motion intent)
5. **README_DESIGN.md** explaining how developers should map Figma tokens to Tailwind config

Optional (if space allows):
- Provide **SVG icon samples** for 2‚Äì3 custom icons (e.g., receipt, upload, category)
- Include **animation JSON snippets** (Lottie-like) for scanning & import success screens

---

## ü™Ñ Creative Direction
Design keywords:
**Clarity, Calm Energy, Human Touch, Momentum, Flow**

Each interaction should subtly *reward* the user ‚Äî soft gradients, eased transitions, micro success animations.  
Every screen should look ‚Äúphotographable‚Äù.

---

## ‚ú® Output Goal
Claude‚Äôs output should be **a textual blueprint of the entire design system and mockup plan**, ready to be handed off to a UI team or built directly into Figma.

Focus on structure, tokens, and visual description ‚Äî not executable React code.  
Imagine you‚Äôre describing a Figma file in words.

---

**Goal:** Deliver a complete design system and Figma-style blueprint that can serve as the master visual reference for the Smart Expense Tracker app.
